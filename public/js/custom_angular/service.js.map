{"version":3,"sources":["service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YAKA;gBACI,iBAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBACtB,cAAS,GAAG,MAAM,CAAC,CAAE,iBAAiB;gBADZ,CAAC;gBAGnC,0BAAQ,GAAR;oBACI,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC,CAAC;oBAC7E,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,eAAe;gBACf,sBAAI,GAAJ,UAAK,IAAS;oBACV,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC;wBACtB,cAAc,EAAE,kBAAkB,EAAE,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;oBAC1E,MAAM,CAAC,IAAI,CAAC,IAAI;yBACX,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;yBAC9D,SAAS,EAAE;yBACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;yBACvB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjC,CAAC;gBAEO,6BAAW,GAAnB,UAAoB,KAAU;oBAC1B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;oBACxC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;gBAClD,CAAC;gBAzBL;oBAAC,iBAAU,EAAE;;2BAAA;gBA0Bb,cAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBD,6BAwBC,CAAA","file":"service.js","sourcesContent":["import { Injectable }    from '../../../node_modules/@angular/core';\nimport { Headers, Http } from '../../../node_modules/@angular/http';\nimport '../../../node_modules/rxjs/add/operator/toPromise';\n@Injectable()\n\nexport class Service {\n    constructor(private http: Http) { }\n    private heroesUrl = 'test';  // URL to web api\n\n    getToken() {\n        let token = document.querySelector('meta[property=\"csrf-token\"]')['content'];\n        return token;\n    }\n\n    // Add new Hero\n    post(hero: any): Promise<any> {\n        let headers = new Headers({\n            'Content-Type': 'application/json', 'X-CSRF-TOKEN': this.getToken()});\n        return this.http\n            .post(this.heroesUrl, JSON.stringify(hero), {headers: headers})\n            .toPromise()\n            .then(res => res.json())\n            .catch(this.handleError);\n    }\n\n    private handleError(error: any) {\n        console.log('An error occurred', error);\n        return Promise.reject(error.message || error);\n    }\n}"],"sourceRoot":"/source/"}